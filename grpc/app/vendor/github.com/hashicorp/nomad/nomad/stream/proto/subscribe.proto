syntax = "proto3";

package hashicorp.nomad.stream.proto;

import "google/protobuf/struct.proto";

option go_package = "pbstream";

service EventStream {
  rpc Subscribe(SubscribeRequest) returns (stream EventBatch) {}
}

enum Topic {
  All = 0;
  Deployment = 1;
  Evaluation = 2;
  Allocation = 3;
  Job = 4;
  Node = 5;
}


message TopicFilter {
  Topic Topic = 1;
  repeated string FilterKeys = 2;
}

message SubscribeRequest {
  string Token = 1;
  uint64 Index = 2;
  string Namespace = 3;

  repeated TopicFilter Topics = 4;
  // TODO see if we prefer map or repeated TopicFilter
  /* map<string, TopicFilter> Topics = 4; */
}

message EventBatch {
  uint64 Index = 1;

  repeated Event Event = 2;
}

message Event {
  Topic Topic = 1;
  string Type = 2;
  string Key = 3;
  string Namespace = 4;
  repeated string FilterKeys = 5;
  uint64 Index = 6;


  google.protobuf.Struct Payload = 7;
}
